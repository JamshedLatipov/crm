// –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç JWT –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
const fetch = require('node-fetch');

const API_URL = 'http://localhost:3000/api';

async function testAuth() {
  console.log('üîê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ JWT –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏...\n');
  
  try {
    // 1. –õ–æ–≥–∏–Ω
    console.log('1. –í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É...');
    const loginResponse = await fetch(`${API_URL}/auth/login`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ username: 'admin', password: 'admin123' })
    });
    
    const loginData = await loginResponse.json();
    
    if (!loginResponse.ok) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ª–æ–≥–∏–Ω–∞:', loginData);
      return;
    }
    
    console.log('‚úÖ –õ–æ–≥–∏–Ω —É—Å–ø–µ—à–µ–Ω!');
    console.log('üìÑ –¢–æ–∫–µ–Ω:', loginData.access_token.substring(0, 50) + '...');
    
    const token = loginData.access_token;
    
    // 2. –°–æ–∑–¥–∞–Ω–∏–µ —Å–¥–µ–ª–∫–∏ —Å —Ç–æ–∫–µ–Ω–æ–º
    console.log('\n2. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π —Å–¥–µ–ª–∫–∏...');
    const dealData = {
      title: `–¢–µ—Å—Ç–æ–≤–∞—è —Å–¥–µ–ª–∫–∞ ${new Date().toLocaleString()}`,
      description: '–°–æ–∑–¥–∞–Ω–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è JWT –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏',
      amount: 150000,
      probability: 75
    };
    
    const createDealResponse = await fetch(`${API_URL}/deals`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${token}`
      },
      body: JSON.stringify(dealData)
    });
    
    const dealResponse = await createDealResponse.json();
    
    if (!createDealResponse.ok) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–¥–µ–ª–∫–∏:', dealResponse);
      return;
    }
    
    console.log('‚úÖ –°–¥–µ–ª–∫–∞ —Å–æ–∑–¥–∞–Ω–∞!');
    console.log('üÜî ID —Å–¥–µ–ª–∫–∏:', dealResponse.id);
    console.log('üë§ –°–æ–∑–¥–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º:', dealResponse.createdBy || 'N/A');
    
    const dealId = dealResponse.id;
    
    // 3. –ü–æ–ª—É—á–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ —Å–¥–µ–ª–∫–∏
    console.log('\n3. –ü–æ–ª—É—á–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ —Å–¥–µ–ª–∫–∏...');
    const historyResponse = await fetch(`${API_URL}/deals/${dealId}/history`, {
      headers: { 'Authorization': `Bearer ${token}` }
    });
    
    const historyData = await historyResponse.json();
    
    if (!historyResponse.ok) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏:', historyData);
      return;
    }
    
    console.log('‚úÖ –ò—Å—Ç–æ—Ä–∏—è –ø–æ–ª—É—á–µ–Ω–∞!');
    console.log('üìä –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π:', historyData.total);
    console.log('üìÑ –ó–∞–ø–∏—Å–∏ –Ω–∞ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ:', historyData.items.length);
    
    if (historyData.items.length > 0) {
      const firstChange = historyData.items[0];
      console.log('üîÑ –ü–µ—Ä–≤–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ:');
      console.log('   - –¢–∏–ø:', firstChange.changeType);
      console.log('   - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', firstChange.userName || firstChange.userId);
      console.log('   - –î–∞—Ç–∞:', new Date(firstChange.createdAt).toLocaleString());
    }
    
    // 4. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–¥–µ–ª–∫–∏
    console.log('\n4. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–¥–µ–ª–∫–∏...');
    const updateResponse = await fetch(`${API_URL}/deals/${dealId}`, {
      method: 'PATCH',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${token}`
      },
      body: JSON.stringify({ 
        description: '–û–±–Ω–æ–≤–ª–µ–Ω–æ —á–µ—Ä–µ–∑ —Ç–µ—Å—Ç JWT –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏',
        probability: 80
      })
    });
    
    const updateData = await updateResponse.json();
    
    if (!updateResponse.ok) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–¥–µ–ª–∫–∏:', updateData);
      return;
    }
    
    console.log('‚úÖ –°–¥–µ–ª–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!');
    
    // 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    console.log('\n5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è...');
    const finalHistoryResponse = await fetch(`${API_URL}/deals/${dealId}/history`, {
      headers: { 'Authorization': `Bearer ${token}` }
    });
    
    const finalHistoryData = await finalHistoryResponse.json();
    
    if (finalHistoryResponse.ok) {
      console.log('‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è –ø–æ–ª—É—á–µ–Ω–∞!');
      console.log('üìä –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π:', finalHistoryData.total);
      console.log('üìà –ò–∑–º–µ–Ω–µ–Ω–∏–π –¥–æ–±–∞–≤–∏–ª–æ—Å—å:', finalHistoryData.total - historyData.total);
      
      // –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
      console.log('\nüìù –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è:');
      finalHistoryData.items.slice(0, 3).forEach((change, index) => {
        console.log(`   ${index + 1}. ${change.changeType} (${change.userName || change.userId}) - ${new Date(change.createdAt).toLocaleString()}`);
      });
    }
    
    console.log('\nüéâ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏:', error.message);
  }
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ node-fetch —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
try {
  require('node-fetch');
  testAuth();
} catch (error) {
  console.log('‚ùå node-fetch –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: npm install node-fetch@2');
  console.log('–ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π fetch –≤ –Ω–æ–≤—ã—Ö –≤–µ—Ä—Å–∏—è—Ö Node.js');
  console.log('–û—à–∏–±–∫–∞:', error.message);
}
# version: '3.8'
services:
  postgres:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_DB: crm
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    mem_limit: "1g"
    mem_reservation: "512m"

  redis:
    image: redis:7
    restart: always
    ports:
      - "6379:6379"
    mem_limit: "256m"
    mem_reservation: "128m"

  rabbitmq:
    image: rabbitmq:3-management
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    mem_limit: "512m"
    mem_reservation: "256m"
      
  # TURN/STUN server (spreed/turnserver wrapper around coturn)
  turn:
    image: spreed/turnserver:v0.3
    restart: always
    # NOTE: For production expose 443 as well and consider network_mode: host
    ports:
      - "3478:3478"
      - "3478:3478/udp"
    # spreed/turnserver expects env-style config at /srv/config
    volumes:
      - "./turnserver/data:/srv"
    mem_limit: "128m"
    mem_reservation: "64m"


  asterisk:
    image: asterisk_with_srtp
    restart: always
    depends_on:
      - turn
    logging:
      driver: json-file
      options:
        max-size: 50m
        max-file: "5"
    ports:
      - "5060:5060/udp"   # SIP UDP
      - "5060:5060/tcp"   # SIP TCP
      - "8088:8088/tcp"   # HTTP API
      - "10000-10100:10000-10100/udp" # RTP
      - "5061:5061/tcp"   # SIP TLS (WebRTC)
      - "8089:8089/tcp"   # WebSocket (ws)
      - "8443:8443/tcp"   # WebSocket Secure (wss)
    command: >
      bash -c "
        sed -i 's/\r$//' /etc/asterisk/ari.conf &&
        mkdir -p /var/log/asterisk/cdr-csv &&
        chmod -R 777 /var/log/asterisk &&
        /usr/sbin/asterisk -f"
    volumes:
      - ./asterisk-config/asterisk.conf:/etc/asterisk/asterisk.conf:ro
      - ./asterisk-config/pjsip.conf:/etc/asterisk/pjsip.conf:ro
      - ./asterisk-config/pjsip.d:/etc/asterisk/pjsip.d:ro
      - ./asterisk-config/http.conf:/etc/asterisk/http.conf:ro
      - ./asterisk-config/rtp.conf:/etc/asterisk/rtp.conf:ro
      - ./asterisk-config/extensions.conf:/etc/asterisk/extensions.conf:ro
      - ./asterisk-config/res_pgsql.conf:/etc/asterisk/res_pgsql.conf:ro
      - ./asterisk-config/cdr_pgsql.conf:/etc/asterisk/cdr_pgsql.conf:ro
      - ./asterisk-config/cdr.conf:/etc/asterisk/cdr.conf:ro
      - ./asterisk-config/modules.conf:/etc/asterisk/modules.conf:ro
      - ./asterisk-config/cel_pgsql.conf:/etc/asterisk/cel_pgsql.conf:ro
      - ./asterisk-config/odbcinst.ini:/etc/odbcinst.ini:ro
      - ./asterisk-config/odbc.ini:/etc/odbc.ini:ro
      - ./asterisk-config/res_odbc.conf:/etc/asterisk/res_odbc.conf:ro
      - ./asterisk-config/extconfig.conf:/etc/asterisk/extconfig.conf:ro
      - ./asterisk-config/sorcery.conf:/etc/asterisk/sorcery.conf:ro
      - ./asterisk-config/stun.conf:/etc/asterisk/stun.conf:ro
      - ./asterisk-config/ari.conf:/etc/asterisk/ari.conf
      - ./asterisk-config/logger.conf:/etc/asterisk/logger.conf:ro
    mem_limit: "512m"
    mem_reservation: "256m"

  back:
    build: .
    depends_on:
      - postgres
      - redis
      - rabbitmq
      - asterisk
      - turn
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASS: postgres
      DB_NAME: crm
      RMQ_URL: amqp://rabbitmq:5672
      RMQ_QUEUE: crm_queue
      REDIS_URL: redis://redis:6379
      ARI_HOST: asterisk
      ARI_PORT: 8089
      ARI_USER: ariuser
      ARI_PASSWORD: aripass
      ARI_APP: crm-app
    ports:
      - "3000:3000"
    command: ["node", "dist/main.js"]
    mem_limit: "512m"
    mem_reservation: "256m"

volumes:
  pgdata:
